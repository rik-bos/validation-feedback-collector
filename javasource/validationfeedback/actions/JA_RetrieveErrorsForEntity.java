// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package validationfeedback.actions;

import java.util.Collection;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import com.mendix.core.Core;
import com.mendix.core.objectmanagement.DataValidationInfo;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixIdentifier;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class JA_RetrieveErrorsForEntity extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private java.lang.String FilteredEntity;
	private java.lang.Boolean RemoveFeedback;

	public JA_RetrieveErrorsForEntity(IContext context, java.lang.String FilteredEntity, java.lang.Boolean RemoveFeedback)
	{
		super(context);
		this.FilteredEntity = FilteredEntity;
		this.RemoveFeedback = RemoveFeedback;
	}

	@java.lang.Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		// BEGIN USER CODE

		Collection<DataValidationInfo> validationList = this.context().getDataValidationList();
		
		List<IMendixObject> listOfErrors = validationList.stream()
			.filter(feedback -> Core.isSubClassOf(this.FilteredEntity, Core.createMendixIdentifier(feedback.guid()).getObjectType()))
			.flatMap(this::mapValidationInfo).collect(Collectors.toList());
		
		if(this.RemoveFeedback) {
			this.removeFeedback(validationList.stream()
					.filter(feedback -> Core.isSubClassOf(this.FilteredEntity, Core.createMendixIdentifier(feedback.guid()).getObjectType()))
					.collect(Collectors.toList())
					);
		}			
		return listOfErrors;
		
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "JA_RetrieveErrorsForEntity";
	}

	// BEGIN EXTRA CODE
	
		private Stream<IMendixObject> mapValidationInfo(DataValidationInfo validationInfo) {
			
		Long guid = validationInfo.guid();
		
		IMendixIdentifier identifier = Core.createMendixIdentifier(guid);
		
		return validationInfo.errorFields().entrySet().stream()
			.map(entry -> this.createErrorObject(guid, identifier.getObjectType(), entry.getKey(), entry.getValue()));
		
	}
	
	private IMendixObject createErrorObject(Long guid, String entity, String property, String feedback) {
		
		validationfeedback.proxies.Error e = new validationfeedback.proxies.Error(this.getContext());
		e.setobjectGuid(this.getContext(), guid);
		e.setentityName(this.getContext(), entity);
		e.setproperty(this.getContext(), property);
		e.setvalidationFeedback(this.getContext(), feedback);
		
		return e.getMendixObject();
	}
	
	private void removeFeedback(Collection<DataValidationInfo> validationList) {
		validationList.stream()
			.forEach(feedback -> feedback.errorFields().clear());
	}
	
	// END EXTRA CODE
}
